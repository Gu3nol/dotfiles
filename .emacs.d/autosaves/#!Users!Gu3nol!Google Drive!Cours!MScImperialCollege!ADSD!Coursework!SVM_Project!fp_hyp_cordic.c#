/*******************************************************************************
Advanced Digital System Design
CORDIC Coprocessor - fp_hyp_cordic.c
Authors: BUGAUT Vincent & LALLEMENT Guénolé
*******************************************************************************/

#include "fp_type.h"
#include "fp_hyp_cordic.h"

void fp_hyp_cordic (
                    data_t input,
                    data_t *outputx,
                    data_t *outputy
                    ) {

  int token4 = 0; // Token for the repetition of the 4th iteration
  int i; // Iteration index
  int nb_iter = 12; // Number of iterations
  data_t K = 0x1348; // 1.2073 initial value in fixed-point 3.12 (16 bits)
  data_t x = K, y = 0; // Approximation of cosh(beta) and sinh(beta)
  data_t x_new; // Temporary variable
  data_t beta = input; // Input angle
  data_t atanh[12]={0x08C9,0x0416,0x0202,0x0100,0x0080,0x0064,0x0032,0x0010,0x0008,0x0004,0x0002,0x0001}; // Stored values

  // CORDIC Iteration
  for(i = 1; i <= nb_iter; i++) {
    // beta<0 anti-clockwise rotation
    if(beta < 0) {
      x_new = x - (y>>i);
      y -= x>>i;
      beta += atanh[i-1];
    }
    // beta>0 clockwise rotation
    else {
      x_new = x + (y>>i);
      y += (x>>i);
      beta -= atanh[i-1];
    }
    x = x_new;
    // force the 4th iteration to be repeated
    if(i==4) {
      if(token4==0) {
        token4++;
        i--;
      }
    }
  }

  // Assignments of the outputs
  *outputx=x;
  *outputy=y;

}
