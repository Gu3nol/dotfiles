#******************************************************************************
#
# Makefile - Rules for building the driver library and examples.
#
# Copyright (c) 2005,2006 Luminary Micro, Inc.  All rights reserved.
#
# Software License Agreement
#
# Luminary Micro, Inc. (LMI) is supplying this software for use solely and
# exclusively on LMI's Stellaris Family of microcontroller products.
#
# The software is owned by LMI and/or its suppliers, and is protected under
# applicable copyright laws.  All rights are reserved.  Any use in violation
# of the foregoing restrictions may subject the user to criminal sanctions
# under applicable laws, as well as to civil liability for the breach of the
# terms and conditions of this license.
#
# THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
# OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
# LMI SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
# CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
#
#******************************************************************************

ROOT=./Tiva
PART=TM4C123GH6PGE

# These definitions set up the gcc toolchain and the Tiva compile framework
include ${ROOT}/makedefs

RTOS_SOURCE_DIR=./FreeRTOS/Source
DEMO_SOURCE_DIR=./Src
TIVA_DIR=${ROOT}

#
# info to pass to the gcc compiler
# this is directories for header files (-I)
# and options to control compile process
# some of these options control the Tiva source code via -D which defines C macros
#
# CFLAGS is used in makedefs which defines the main tool commands:
# CC C compiler
# AS assembler (also uses gcc)
# LD linker
#
CFLAGS+=-I ${DEMO_SOURCE_DIR} -I ${TIVA_DIR} -I . -I ${RTOS_SOURCE_DIR}/include -I ${RTOS_SOURCE_DIR}/portable/GCC/ARM_CM4F -I ${DEMO_SOURCE_DIR}  -I ${TIVA_DIR}/utils

CFLAGS+=-I ${TIVA_DIR}/drivers

CFLAGS+= -nostdlib -DPART_TM4C123GH6PGE -DGCC_ARMCM4_LM4F232 -D inline=

#
# set of directories to look for Tiva and RTOS source files
#
VPATH=${DEMO_SOURCE_DIR}:${RTOS_SOURCE_DIR}:${RTOS_SOURCE_DIR}/portable/MemMang:${RTOS_SOURCE_DIR}/portable/GCC/ARM_CM4F:${TIVA_DIR}/drivers:${TIVA_DIR}/utils:${TIVA_DIR}/driverlib:${TIVA_DIR}

#
# explicitly mention every object file defining this application
# it will be generated from a C file of the same name
#
APPOBJS=gcc/main.o \
	    gcc/usertask.o

#
# the RTOS source files used
#
RTOSOBJS=gcc/main.o \
	  gcc/list.o    \
      gcc/queue.o   \
      gcc/tasks.o   \
      gcc/port.o    \
      gcc/heap_1.o  
#
# the source files used in the Demo code
# NB uartstdiox is a modified version of TIVA uartstdio which implements RTOS signalling from
# a command loop using the UART. See comline.c.
# applications can use UARTprintf freely.
#	  
DEMOOBJS=gcc/cfal96x64x16.o \
	  gcc/cpu_usage.o    \
	  gcc/RegTest.o    \
	  gcc/commands.o    \
	  gcc/ustdlib.o    \
	  gcc/uartstdiox.o  \
	  gcc/cmdline.o    \
	  gcc/images.o 

OBJS= ${APPOBJS} ${RTOSOBJS} ${DEMOOBJS}  
	  
#
# startup code for the C compiler to create the RTOS
# modified to define the RTOS tick ISR vector correctly
#
INIT_OBJS= gcc/startup_gcc.o

# The Tiva libraries are built from separate makefiles in their own directories
# make here does not remake libraries, even if Tiva source has changed!
LIBS= ${TIVA_DIR}/driverlib/gcc/libdriver.a ${TIVA_DIR}/grlib/gcc/libgr.a

${TIVA_DIR}/driverlib/gcc/libdriver.a:
	make -C ${TIVA_DIR}/driverlib

${TIVA_DIR}/grlib/gcc/libgr.a:
	make -C ${TIVA_DIR}/grlib

${TIVA_DIR}/usblib/gcc/libusb.a:
	make -C ${TIVA_DIR}/usblib

	
#
# The default rule, which causes the downloadable binary to be built.
#
all: gcc           \
	 makegcc   \
     gcc/RTOSDemo.axf
	@echo "Programming board: do not interrupt..."
	@lmflash -q ek-lm4f232 -r -e all $(COMPILER)/RTOSDemo.bin
	@echo "Finished programming!"
	
	
#	 
# The rule to make the gcc directory for build products
#
makegcc:
	@mkdir -p gcc
	
	
#
# The rule to clean out all the build products
#
OTHERDIRS=Tiva/driverlib Tiva/grlib Tiva/usblib
OTHERDIRSPLUS=${wildcard Tiva/*}
clean:
	@rm -rf gcc ${wildcard *.bin} RTOSDemo.axf

cleantiva: clean
	@for i in ${OTHERDIRSPLUS};             \
	 do                            \
	     if [ -f $${i}/Makefile ]; \
	     then                      \
	         make -C $${i} clean;  \
	     fi;                       \
	 done

alltiva:
	@for i in ${OTHERDIRS};                  \
	 do                                 \
	     if [ -f $${i}/Makefile ];      \
	     then                           \
	         make -C $${i} || exit $$?; \
	     fi;                            \
	 done
	make all

#
# The rule to download and run the executable
#
flash:
	lmflash -q ek-lm4f232 -r -e all gcc/RTOSDemo.bin


	
#
# The rule to create the target directory
#
gcc:
	@mkdir gcc

#
# The rule to do the object linking and create a linked axf file
# This definition adds to the rule for linking in makedefs
# Note that linking creates the linked axf file and also a reformatted
# version of this the .bin file used by the loader
#
gcc/RTOSDemo.axf: ${INIT_OBJS} ${OBJS} ${LIBS}
SCATTER_RTOSDemo=standalone.ld
ENTRY_RTOSDemo=ResetISR
CFLAGSgcc=-DTARGET_IS_BLIZZARD_RA1

#
# Include the automatically generated dependency files, unless we are doing clean
# clean may be used to delete corrupt .d files and these will cause makefile
# error if included when doing clean
#
ifneq ($@,clean)
-include ${wildcard gcc/*.d} __dummy__
endif



	 



