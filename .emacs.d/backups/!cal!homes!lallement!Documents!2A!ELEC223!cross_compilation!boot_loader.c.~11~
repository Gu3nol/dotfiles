/* boot_loader.c */

#include <stdint.h>
#include "serial.h"

#define L 0x4C
#define R 0x52
#define G 0x47

/* Interface pour répondre aux commande envoyées via port série */
void boot_interface(char cmd, uint32_t address) {
  switch(cmd) {
  case (c == 'L'):
    load_address(address);
    break;
  case (c == 'R'):
    go_adress(address);
    break;
  case (c == 'G'):
    read_address(address);
    break;
  default:
    serial_puts("Commande invalide !\r\n");
}

void load_address(uint32_t address) {
}

void go_address(uint32_t address) {
}

void read_address(uint32_t address) {
}

uint32_t parser() {
}

char* hex2ascii(uint32_t hex) {

}

uint32_t ascii2hex(char c) {





}
