package tpcorba;

import org.omg.CORBA.*;
import java.lang.*;
import java.util.*;
import java.io.*;

public class Client
{
    public static void main (String args[]) throws IOException
    { 
	/////////////////////////////
	// Initialisation de l'ORB //
	/////////////////////////////

	org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, null);
	
	//////////////////////////////////////////////////////
	// Recuperation de la reference d'objet du serveur  //
	// Dans cet exemple, la reference est stockee sous  //
	// la forme d'une chaine de caractere (IOR) dans un //
	// fichier. A ce stade, il est bien sur possible    //
	// d'invoquer un service de nommage.                //
	//////////////////////////////////////////////////////
	
	String ior = null;
	try
	    {
		String ref = "calcul.ref";
		FileInputStream file = new FileInputStream (ref);
		BufferedReader in 
		    = new BufferedReader (new InputStreamReader (file));
		ior = in.readLine ();
		file.close ();
	    }
	catch (IOException ex)
	    {
		System.err.println ("Impossible de lire fichier : `" 
				    + ex.getMessage () + "'");
		System.exit (1);
	    }
	
	/////////////////////////////////////////////////////////////////
	// Construction d'une reference d'objet, non type,             //
	// puis "convertie" en une reference sur l'interface           //
	// "calcul" a l'aide de narrow (operation de "cast" dynamique) //
	/////////////////////////////////////////////////////////////////
	
	org.omg.CORBA.Object obj = orb.string_to_object (ior);

	if (obj == null)
	    {
		System.err.println ("Erreur sur string_to_object()");
		throw new RuntimeException ();
	    }
	
	tpcorba.calcul calc = tpcorba.calculHelper.narrow (obj);

	if (calc == null)
	    {
		System.err.println ("Erreur sur narrow()");
		throw new RuntimeException ();
	    }

	///////////////////////////
	// Invocation du serveur //
	///////////////////////////
	
	// Etat initial de la Memoire de la calculatrice

	System.out.println ("Etat initial : " + calc.memoire());

	// Operations sur la memoire de la calculatrice

	// ...		

	// Etat final de la memoire de la calculatrice
	
	System.out.println (calc.memoire());
		
	System.exit(0);

    }
}

