// VerilogA for CMOS14_DAC, TB_DAC, veriloga
`timescale 1ns/1ps
`include "constants.vams"
`include "disciplines.vams"

module TB_DAC(CLK10MREF,EN,SI,CLKIN,VOUTREF);

input CLKIN;
output SI,EN,CLK10MREF,VOUTREF;

electrical CLKIN,SI,EN,CLK10MREF,VOUTREF;

parameter Vol=0 from (-5:5);
parameter Voh=1.8 from(-5:5);
parameter real Vth=(1.8)/2 ;  // logic threshold level
parameter real Td=0;                        // input-to-output time delay
parameter real Tr=1n from (0:inf);          // output rise time
parameter real Tf=1n;                       // output fall time
parameter real ttol=1n/10;                  // edge detect time tolerance
parameter real vtol=0.1;                    // edge detect voltage tolerance
parameter real clkperiod = 100n from (0:inf); //clk period default 100n =10M
parameter real ratio_fs=1000;
`define L(node)  (V(node)>Vth)
integer bit_now;
integer cnt,powerbits,cnt_bit;					//counter to generate EN
real ven,vsi,vdac;
integer clk,dac;
analog begin
   @(initial_step("static","tran")) begin  // On initialization,
   		ven=Vol;
                vsi=Vol;
		vdac=0;
		clk=0;
	end
  	@(cross(V(CLKIN)-Vth,1,ttol,vtol)) begin   // On clock edge,
  		cnt=cnt+1; 	
  		cnt_bit = cnt - floor(cnt/ratio_fs)*ratio_fs;
		if (cnt_bit>=10 && cnt_bit <18) begin
			ven=Voh;
			vdac = floor(cnt/ratio_fs);
			dac=vdac;
			powerbits=pow(2,cnt_bit-10);
			vsi = dac&(powerbits)? Voh:Vol;  // SI.
  		end
		else begin
			ven=Vol;
			vsi=Vol;
		end
	end
	@ (timer(0, clkperiod/2)) begin
		clk = !clk;
	end
	V(CLK10MREF) <+ transition (clk? Voh:Vol, Td,Tr,Tf,ttol);
	//V(CLK10MREF) <+ clk? Voh:Vol;
	V(EN) <+ transition (ven, Td,Tr,Tf,ttol);
	V(SI) <+ transition (vsi, Td,Tr,Tf,ttol);
	V(VOUTREF) <+ transition (vdac/255 +0.4, Td,Tr,Tf,ttol);
end

endmodule
