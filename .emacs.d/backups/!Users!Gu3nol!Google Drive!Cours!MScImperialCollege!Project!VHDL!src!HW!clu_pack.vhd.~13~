---------------------------------------------------------
-- Package for the Top level Control Logic Unit
-- clu_pack.vhd
-- MSc Project 2015
-- @Author: Guénolé LALLEMENT

-- This VHDL code is implemented on-chip using
-- the Cadence Encounter tool

-- It is developed for an 8x8 hexagonal pixel array
-- and characterisation array
--------------------------------------------------------

LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

PACKAGE clu_pack IS
  -- Alias
  ALIAS sl IS std_logic;
  ALIAS slv IS std_logic_vector;

  ALIAS sg IS signed;
  ALIAS unsg IS unsigned;

  -- Constant for the size of the array
  CONSTANT array_size : natural := 8;

  -- Constants definining commands from the host CPU to CLU using SPI
  CONSTANT op_start : slv(1 DOWNTO 0) := "11";
  CONSTANT op_stop  : slv(1 DOWNTO 0) := "01";
  CONSTANT op_reset : slv(1 DOWNTO 0) := "10";

  -- Constants definining commands from the CLU to the host CPU using SPI
  CONSTANT st_rdy   : slv(1 DOWNTO 0) := "11";
  CONSTANT st_wip   : slv(1 DOWNTO 0) := "01";
  CONSTANT st_reset : slv(1 DOWNTO 0) := "00";

  -- One hot decoder functions
  FUNCTION one_hot_dec_row(array_coord : slv(7 DOWNTO 0)) RETURN integer IS
    VARIABLE num_row : integer;
  BEGIN
    num_row := To_integer(unsg(array_coord(5 DOWNTO 3)));
    RETURN num_row;
  END FUNCTION one_hot_dec_row;

  FUNCTION one_hot_dec_col(array_coord : slv(7 DOWNTO 0)) RETURN integer IS
    VARIABLE num_col : integer;
  BEGIN
    num_col := To_integer(unsg(array_coord(2 DOWNTO 0)));
    RETURN num_col;
  END FUNCTION one_hot_dec_row;



END PACKAGE clu_pack;
